<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.StudentCourse.mapper.TeacherMapper">


    <update id="updateScore">
        update course_selection
        set normal_score = #{normalScore}, test_score = #{testScore}, test_proportion = #{testProportion}, normal_proportion = #{normalProportion}
        where student_id = #{studentId}
        and course_id = #{courseId}
        and staff_id = #{teacherId}
        and semester = #{semester}
    </update>

    <select id="showTeachClass" resultType="com.example.StudentCourse.pojo.Classes">
        SELECT cl.course_id, c.course_name, cl.class_time, cl.class_id, cl.semester
        FROM class cl
        JOIN course c ON cl.course_id = c.course_id
        WHERE cl.staff_id = #{teacherId}
        <if test="semester != null and semester != ''">
            AND cl.semester = #{semester}  <!-- 根据传入的学期进行筛选 -->
        </if>
        <if test="courseId != null and courseId != ''">
            AND cl.course_id = #{courseId}  <!-- 根据课程名称进行筛选 -->
        </if>
    </select>


    <select id="showStuentScoreList" resultType="com.example.StudentCourse.pojo.CourseSelection">
        select cs.student_id,
            cs.course_id,
            c.course_name, s.name,
            cs.normal_score, cs.test_score, cs.total_score,cs.GPA,
            cs.class_id
        from course_selection cs
        join student s on cs.student_id = s.student_id
        join course c on cs.course_id = c.course_id
        where cs.staff_id = #{teacherId}
        <if test="semester != null and semester != ''">
            AND cs.semester = #{semester}  <!-- 根据传入的学期进行筛选 -->
        </if>
        <if test="courseId != null and courseId != ''">
            AND cs.course_id = #{courseId}  <!-- 根据课程名称进行筛选 -->
        </if>
        <if test="classId != null and classId != ''">
            AND cs.class_id = #{classId}  <!-- 根据班级名称进行筛选 -->
        </if>
        order by cs.student_id
    </select>

    <select id="ScoreDistribution" resultType="com.example.StudentCourse.pojo.scoreDistribution">
        SELECT
        min_score,
        CASE
        WHEN min_score = 90 THEN 99 -- 单独处理 90-100 区间
        ELSE min_score + 9
        END AS max_score, -- 区间最高成绩
        COUNT(*) AS number_of_students -- 统计每个区间内的人数
        FROM (
        SELECT
        CASE
        WHEN total_score >= 90 THEN 90 -- 将 >=90 的成绩分到 90-100 区间
        ELSE FLOOR(total_score / 10) * 10
        END AS min_score
        FROM
        course_selection
        WHERE
        staff_id = #{teacherId}
        AND semester = #{semester}
        AND course_id = #{courseId}
        AND class_id = #{classId}
        AND total_score >= 0 -- 保留所有 >=0 的成绩
        ) AS subquery
        GROUP BY
        min_score
        ORDER BY
        min_score;
    </select>
    <select id="NormalScoreDistribution" resultType="com.example.StudentCourse.pojo.scoreDistribution">
        SELECT
        min_score,
        CASE
        WHEN min_score = 90 THEN 99 -- 单独处理 90-99 区间
        ELSE min_score + 9
        END AS max_score, -- 区间最高成绩
        COUNT(*) AS number_of_students -- 统计每个区间内的人数
        FROM (
        SELECT
        CASE
        WHEN normal_score >= 90 THEN 90 -- 将 >=90 的成绩分到 90-99 区间
        ELSE FLOOR(normal_score / 10) * 10
        END AS min_score
        FROM
        course_selection
        WHERE
        staff_id = #{teacherId}
        AND semester = #{semester}
        AND course_id = #{courseId}
        AND class_id = #{classId}
        AND normal_score >= 0 -- 保留所有 >=0 的成绩
        ) AS subquery
        GROUP BY
        min_score
        ORDER BY
        min_score;
    </select>
    <select id="TestScoreDistribution" resultType="com.example.StudentCourse.pojo.scoreDistribution">
        SELECT
        min_score,
        CASE
        WHEN min_score = 90 THEN 99 -- 单独处理 90-99 区间
        ELSE min_score + 9
        END AS max_score, -- 区间最高成绩
        COUNT(*) AS number_of_students -- 统计每个区间内的人数
        FROM (
        SELECT
        CASE
        WHEN test_score >= 90 THEN 90 -- 将 >=90 的成绩分到 90-100 区间
        ELSE FLOOR(test_score / 10) * 10
        END AS min_score
        FROM
        course_selection
        WHERE
        staff_id = #{teacherId}
        AND semester = #{semester}
        AND course_id = #{courseId}
        AND class_id = #{classId}
        AND test_score >= 0 -- 保留所有 >=0 的成绩
        ) AS subquery
        GROUP BY
        min_score
        ORDER BY
        min_score;
    </select>

    <select id="showInfo" resultType="com.example.StudentCourse.pojo.Teacher">
        SELECT t.staff_id, t.name, t.sex, t.date_of_birth, t.professional_ranks, t.salary, d.dept_name
        FROM teacher t
        JOIN department d ON t.dept_id = d.dept_id
        WHERE t.staff_id = #{teacherId}
    </select>


</mapper>
